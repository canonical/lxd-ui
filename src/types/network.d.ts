export type LxdNetworkBridgeDriver = "native" | "openvswitch";
export type LxdNetworkType = "bridge";
export type LxdNetworkBridgeMode = "standard" | "fan";
export type LxdNetworkDnsMode = "none" | "managed" | "dynamic";
export type LxdNetworkFanType = "vxlan" | "ipip";

export interface LxdNetwork {
  config: {
    "bridge.driver"?: LxdNetworkBridgeDriver;
    "bridge.external_interfaces"?: string;
    "bridge.hwaddr"?: string;
    "bridge.mode"?: LxdNetworkBridgeMode;
    "bridge.mtu"?: string;
    "dns.domain"?: string;
    "dns.mode"?: LxdNetworkDnsMode;
    "dns.search"?: string;
    "dns.zone.forward"?: string;
    "dns.zone.reverse.ipv4"?: string;
    "dns.zone.reverse.ipv6"?: string;
    "fan.type"?: LxdNetworkFanType;
    "fan.overlay_subnet"?: string;
    "fan.underlay_subnet"?: string;
    "ipv4.address"?: string;
    "ipv4.dhcp"?: string;
    "ipv4.dhcp.expiry"?: string;
    "ipv4.dhcp.gateway"?: string;
    "ipv4.dhcp.ranges"?: string;
    "ipv4.firewall"?: string;
    "ipv4.nat"?: string;
    "ipv4.nat.address"?: string;
    "ipv4.nat.order"?: string;
    "ipv4.ovn.ranges"?: string;
    "ipv4.routes"?: string;
    "ipv4.routing"?: string;
    "ipv6.address"?: string;
    "ipv6.dhcp"?: string;
    "ipv6.dhcp.expiry"?: string;
    "ipv6.dhcp.ranges"?: string;
    "ipv6.dhcp.stateful"?: string;
    "ipv6.firewall"?: string;
    "ipv6.nat"?: string;
    "ipv6.nat.address"?: string;
    "ipv6.nat.order"?: string;
    "ipv6.ovn.ranges"?: string;
    "ipv6.ovn.routes"?: string;
    "ipv6.ovn.routing"?: string;
    [key: `user.${string}`]: string;
  };
  description?: string;
  locations?: string[];
  managed?: boolean;
  name: string;
  status?: string;
  type: LxdNetworkType;
  used_by?: string[];
}
